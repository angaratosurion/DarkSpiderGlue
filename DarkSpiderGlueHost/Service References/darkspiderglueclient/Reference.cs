//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DarkSpiderGlueHost.darkspiderglueclient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="darkspiderglueclient.ISpiderWebService")]
    public interface ISpiderWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpiderWebService/ShutdownAll", ReplyAction="http://tempuri.org/ISpiderWebService/ShutdownAllResponse")]
        void ShutdownAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpiderWebService/GetEndpoints", ReplyAction="http://tempuri.org/ISpiderWebService/GetEndpointsResponse")]
        string[][][] GetEndpoints();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpiderWebService/FindService", ReplyAction="http://tempuri.org/ISpiderWebService/FindServiceResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[][][]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[][]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        object FindService(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpiderWebService/ShutownContainedServices", ReplyAction="http://tempuri.org/ISpiderWebService/ShutownContainedServicesResponse")]
        void ShutownContainedServices(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpiderWebService/HostAll", ReplyAction="http://tempuri.org/ISpiderWebService/HostAllResponse")]
        void HostAll(string servicesrootpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpiderWebService/ListServices", ReplyAction="http://tempuri.org/ISpiderWebService/ListServicesResponse")]
        string[][] ListServices();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpiderWebServiceChannel : DarkSpiderGlueHost.darkspiderglueclient.ISpiderWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpiderWebServiceClient : System.ServiceModel.ClientBase<DarkSpiderGlueHost.darkspiderglueclient.ISpiderWebService>, DarkSpiderGlueHost.darkspiderglueclient.ISpiderWebService {
        
        public SpiderWebServiceClient() {
        }
        
        public SpiderWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpiderWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpiderWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpiderWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ShutdownAll() {
            base.Channel.ShutdownAll();
        }
        
        public string[][][] GetEndpoints() {
            return base.Channel.GetEndpoints();
        }
        
        public object FindService(string name) {
            return base.Channel.FindService(name);
        }
        
        public void ShutownContainedServices(string name) {
            base.Channel.ShutownContainedServices(name);
        }
        
        public void HostAll(string servicesrootpath) {
            base.Channel.HostAll(servicesrootpath);
        }
        
        public string[][] ListServices() {
            return base.Channel.ListServices();
        }
    }
}
